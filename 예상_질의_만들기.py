# -*- coding: utf-8 -*-
"""예상 질의 만들기.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yqcmbd0jPpp0tgCZSgrD96qEoMsb9Elo
"""

# ✅ 1. 필수 설치
!pip install openai pandas openpyxl tqdm

!pip install openai==0.28

# ✅ 2. 라이브러리 불러오기
import openai
import pandas as pd
from tqdm import tqdm
import os

# ✅ 3. OpenAI API 키 설정
openai.api_key = "sk-..."  # ← 본인의 API 키로 교체하세요

df = pd.read_csv("개요만.csv", encoding="utf-8")
df["개요"] = df["개요"].fillna("")

# 5. 프롬프트 템플릿
def build_prompt(overview):
    return f"""다음은 숙소에 대한 개요입니다. 이 숙소에 대해 사용자가 실제로 숙소 추천을 요청할 때 할 수 있는 질문을 5가지 생성해주세요.
                질문은 실제 사용자가 이 숙소를 추천받기 위해 조건을 말하는 방식으로 구성되어야 합니다.

[개요]
{overview}

[예상 질문 리스트]
1.서면 근처에 롯데백화점과 가까운 숙소를 추천해 줄 수 있어?
2.고령자와 장애인 분들이 머물기 편한 숙소가 있니?
3.신불산에 가기 편리한 숙소를 찾고 있어요. 추천해주세요.
4.부산 수영구에 출장 갈 일이 있어서, 고급스러우면서도 청결한 숙소를 찾고 있습니다. 비즈니스 여행에 적합한 모텔 추천 부탁드려요
5.부산에 출장을 가는데, 편안하게 쉴 수 있는 특실을 찾고 있습니다. 추천해주실 만한 곳이 있나요?
"""

# ✅ 6. 질문 생성 함수
def generate_questions(overview):
    prompt = build_prompt(overview)
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4-turbo",  # 또는 "gpt-4", 10개 당 약 $0.14
            messages=[
                {"role": "system", "content": "당신은 숙소 추천 질문을 만드는 AI입니다."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7,
            max_tokens=512
        )
        content = response.choices[0].message['content']
        questions = [line.strip("12345. ") for line in content.strip().split('\n') if line.strip()]
        return questions[:5] + [""] * (5 - len(questions))  # 항상 5개 맞추기
    except Exception as e:
        print(f"Error: {e}")
        return [""] * 5

# ✅ 7. 질문 생성 루프
results = []
for _, row in tqdm(df.iterrows(), total=len(df)):
    숙소명 = row["명칭"]
    개요 = row["개요"]
    질문들 = generate_questions(개요)
    results.append({
        "숙소명": 숙소명,
        "개요": 개요,
        "질문1": 질문들[0],
        "질문2": 질문들[1],
        "질문3": 질문들[2],
        "질문4": 질문들[3],
        "질문5": 질문들[4]
    })

# ✅ 8. 결과 저장
result_df = pd.DataFrame(results)
result_df.to_csv("VectorDB_예상질의.csv", index=False, encoding='utf-8-sig')
print("✅ 예상 질문 생성 완료: VectorDB_예상질의.csv 저장됨")

result_df
